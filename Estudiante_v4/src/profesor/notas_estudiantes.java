/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package profesor;

import bases_de_datos.Modificar_notas_estudiante;
import bases_de_datos.agregar_materia_estudiante;
import clases.materia;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class notas_estudiantes extends javax.swing.JFrame {

    private final static String drv = "org.postgresql.Driver";//Dirver de conexion
    private final static String url = "jdbc:postgresql://localhost:5432/prueba_est"; // Ruta de conexion
    private final static String user = "postgres"; // nombre de la base de datos
    private final static String pass = "12345"; // Contrase√±a
    private static Connection Conexion;
    private static Statement SentenciaSQL;
    private DefaultComboBoxModel value;
    String codigo_profesor="";
    double notafinal=0;
    int numero_estudiantes;
    public notas_estudiantes(String cedula_profesor) {
        
        codigo_profesor=cedula_profesor;
        initComponents();        
        cargarComboBD(codigo_profesor);
    }
    
    public notas_estudiantes() {
        
        codigo_profesor="345";
        initComponents();        
        cargarComboBD(codigo_profesor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_notas = new javax.swing.JTable();
        combo_materias = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        boton_regresar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla_notas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabla_notas);

        combo_materias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_materiasActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccione Materia");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        boton_regresar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        boton_regresar.setForeground(new java.awt.Color(204, 0, 0));
        boton_regresar.setText("Regresar");
        boton_regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_regresarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Notas Estudiantes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(26, 26, 26)
                                    .addComponent(combo_materias, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(124, 124, 124))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(38, 38, 38)
                                    .addComponent(boton_regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_materias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boton_regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combo_materiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_materiasActionPerformed
        materia aux = (materia) combo_materias.getSelectedItem();
        //JOptionPane.showMessageDialog(rootPane, aux.getCodigo());
        llenar_tabla(aux.getCodigo());
        numero_estudiantes=numeroestudiante(aux.getCodigo());
    }//GEN-LAST:event_combo_materiasActionPerformed

    private void boton_regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_regresarActionPerformed
       this.dispose();
    }//GEN-LAST:event_boton_regresarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            modificar_notas();
            this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

  
    
    public int numeroestudiante(String codigo_materia){
       int numero_materias;
        try {
            Class.forName(drv);
            Conexion = DriverManager.getConnection(url, user, pass);
            SentenciaSQL = Conexion.createStatement();
            Statement SentenciaSQL = Conexion.createStatement(
                    ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            

            ResultSet est_mat = SentenciaSQL.executeQuery("select count (est_mat.codigo_estudiante) from estudiantes,est_mat\n" +
"where estudiantes.codigo_estudiante = est_mat.codigo_estudiante and est_mat.codigo_materia='"+codigo_materia+"'");
            
            if (est_mat.next()) {
                numero_materias = est_mat.getInt(1);
               System.out.println(numero_materias);
               
            
            
            
            est_mat.close();
            Conexion.close();
            SentenciaSQL.close();
            System.out.println("Estudiante ingresado");
            return numero_materias;
            }
            else{
                return 0;
            
            }
           

        } catch (ClassNotFoundException e) {
            System.out.println("Clase no encontrada");
            return 0;

        } catch (SQLException e) {
            System.out.println(e);
           return 0;

        }
    }
    
    
    public void cargarComboBD(String codigo_profesor) {

        try {
            Class.forName(drv);
            Conexion = DriverManager.getConnection(url, user, pass);
            SentenciaSQL = Conexion.createStatement();
            Statement SentenciaSQL = Conexion.createStatement();
            ResultSet materias = SentenciaSQL.executeQuery("select profesores.nombre_profesor,prof_mat.codigo_materia,materia.nombre_materia from materia,profesores,prof_mat\n" +
" where prof_mat.cedula_profesor = '"+codigo_profesor+"' and materia.codigo_materia = prof_mat.codigo_materia and prof_mat.cedula_profesor = profesores.cedula_profesor; ");
            combo_materias.removeAllItems();

            value = new DefaultComboBoxModel();
            combo_materias.setModel(value);

            while (materias.next()) {
                // combo_materias.addItem(materias.getString(2));                
                //System.out.println(materias.getString(2));
                //combo_materias.addItem(new materia(materias.getString(1),materias.getString(2)));
                value.addElement(new materia(materias.getString(2), materias.getString(3)));
            }

            materias.close();
            Conexion.close();
            SentenciaSQL.close();
            System.out.println("Estudiante ingresado");

        } catch (ClassNotFoundException e) {
            System.out.println("Clase no encontrada  ");

        } catch (SQLException e) {
            System.out.println(e);

        }

    }
    
    
    public void modificar_notas(){
        
        String [][] est = new String[numero_estudiantes][7];
        
        for (int i = 0; i < tabla_notas.getRowCount(); i++) {
            
            est[i][0]=(String) tabla_notas.getValueAt(i, 0);
            est[i][1]=(String) tabla_notas.getValueAt(i, 1);
            est[i][2]=(String) tabla_notas.getValueAt(i, 2);
            est[i][3]=String.valueOf(tabla_notas.getValueAt(i, 3));
            est[i][4]=String.valueOf(tabla_notas.getValueAt(i, 4));;
            est[i][5]=String.valueOf(tabla_notas.getValueAt(i, 5));
            est[i][6]= String.valueOf(notafinal(Double.parseDouble(est[i][3]), 
                    Double.parseDouble(est[i][4]), Double.parseDouble(est[i][5])));
        }
        //mostra(est);
        Modificar_notas_estudiante mod = new Modificar_notas_estudiante();
        mod.Modificar(est);
    
    }
    
    
    public double notafinal(double n1,double n2,double n3){
          return (n1*0.3)+(n2*0.3)+(n3*0.4);
    }
    
    
   
	public void mostra(String est[][]){
		String salida="los datos de los empleados son:\n";
		for(int i=0;i<est.length;i++){
			for(int j=0;j<7;j++)
				salida+=est[i][j]+"   ";
			salida+="\n";
		}
		JOptionPane.showMessageDialog(null,salida); 
	}
    
    
    public void llenar_tabla(String codigo_materia){
        try {
            //Para establecer el modelo al JTable
            DefaultTableModel modelo = new DefaultTableModel();
            this.tabla_notas.setModel(modelo);
            //Para conectarnos a nuestra base de datos
            DriverManager.registerDriver(new org.postgresql.Driver());
            Connection conexion = DriverManager.getConnection("jdbc:postgresql://localhost:5432/prueba_est", "postgres", "12345");
            //Para ejecutar la consulta
            Statement s = conexion.createStatement();
            //Ejecutamos la consulta que escribimos en la caja de texto
            //y los datos lo almacenamos en un ResultSet
            ResultSet rs = s.executeQuery("select est_mat.codigo_materia,estudiantes.codigo_estudiante,estudiantes.nombre_estudiante,est_mat.nota_1,est_mat.nota_2,est_mat.nota_3 from estudiantes,est_mat\n" +
"where estudiantes.codigo_estudiante = est_mat.codigo_estudiante and est_mat.codigo_materia='"+codigo_materia+"'");
            //Obteniendo la informacion de las columnas que estan siendo consultadas
            ResultSetMetaData rsMd = rs.getMetaData();
            //La cantidad de columnas que tiene la consulta
            int cantidadColumnas = rsMd.getColumnCount();
            //Establecer como cabezeras el nombre de las colimnas
            for (int i = 1; i <= cantidadColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));

            }
            //Creando las filas para el JTable
            while (rs.next()) {
                Object[] fila = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                modelo.addRow(fila);
            }
            rs.close();
            conexion.close();

//            tabla_notas.getColumnModel().getColumn(0).setMaxWidth(0);
//            tabla_notas.getColumnModel().getColumn(0).setMinWidth(0);
//            tabla_notas.getColumnModel().getColumn(0).setPreferredWidth(0);
            
            //setAnchoColumnas();

//            jtQuery.getColumnModel().getColumn(1).setMaxWidth(0);
//            jtQuery.getColumnModel().getColumn(1).setMinWidth(0);
//            jtQuery.getColumnModel().getColumn(1).setPreferredWidth(0);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(notas_estudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(notas_estudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(notas_estudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(notas_estudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new notas_estudiantes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_regresar;
    private javax.swing.JComboBox combo_materias;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_notas;
    // End of variables declaration//GEN-END:variables
}
